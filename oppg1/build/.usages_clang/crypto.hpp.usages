22 serialization::archive 12 0 0 0 0 48 /home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1 54 /home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/build 0 0 456 0 0 0 1 # 1 1 1 2 18446744073709551615 6 pragma 1 2 1 8 18446744073709551615 4 once 1 9 1 13 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 6 vector 2 11 2 17 18446744073709551615 1 > 2 17 2 18 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 6 random 3 11 3 17 18446744073709551615 1 > 3 17 3 18 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 7 iomanip 4 11 4 18 18446744073709551615 1 > 4 18 4 19 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 8 iostream 5 11 5 19 18446744073709551615 1 > 5 19 5 20 18446744073709551615 30 // #include <openssl/buffer.h> 6 1 6 31 18446744073709551615 27 // #include <openssl/evp.h> 7 1 7 28 18446744073709551615 27 // #include <openssl/pem.h> 8 1 8 28 18446744073709551615 27 // #include <openssl/rsa.h> 9 1 9 28 18446744073709551615 27 // #include <openssl/sha.h> 10 1 10 28 18446744073709551615 1 # 11 1 11 2 18446744073709551615 7 include 11 2 11 9 18446744073709551615 1 < 11 10 11 11 18446744073709551615 7 sstream 11 11 11 18 18446744073709551615 1 > 11 18 11 19 18446744073709551615 1 # 12 1 12 2 18446744073709551615 7 include 12 2 12 9 18446744073709551615 1 < 12 10 12 11 18446744073709551615 6 string 12 11 12 17 18446744073709551615 1 > 12 17 12 18 18446744073709551615 3 std 15 1 15 4 0 2 :: 15 4 15 6 1 6 string 15 6 15 12 2 14 simple_decrypt 15 13 15 27 1 1 ( 15 27 15 28 1 3 int 15 28 15 31 18446744073709551615 6 offset 15 32 15 38 3 1 , 15 38 15 39 1 3 std 15 40 15 43 0 2 :: 15 43 15 45 18446744073709551615 6 string 15 45 15 51 2 1 & 15 52 15 53 18446744073709551615 5 input 15 53 15 58 4 1 ) 15 58 15 59 1 1 { 15 60 15 61 18446744073709551615 3 std 16 3 16 6 0 2 :: 16 6 16 8 18446744073709551615 6 string 16 8 16 14 2 6 output 16 15 16 21 5 1 ; 16 21 16 22 18446744073709551615 6 output 17 3 17 9 5 1 . 17 9 17 10 6 7 reserve 17 10 17 17 6 1 ( 17 17 17 18 6 5 input 17 18 17 23 4 1 . 17 23 17 24 7 4 size 17 24 17 28 7 1 ( 17 28 17 29 7 1 ) 17 29 17 30 7 1 ) 17 30 17 31 6 1 ; 17 31 17 32 18446744073709551615 3 for 18 3 18 6 18446744073709551615 1 ( 18 6 18 7 18446744073709551615 4 char 18 7 18 11 18446744073709551615 1 & 18 12 18 13 18446744073709551615 1 i 18 13 18 14 8 1 : 18 15 18 16 9 5 input 18 17 18 22 4 1 ) 18 22 18 23 18446744073709551615 1 { 18 24 18 25 18446744073709551615 6 output 19 5 19 11 5 1 . 19 11 19 12 10 9 push_back 19 12 19 21 10 1 ( 19 21 19 22 10 1 ( 19 22 19 23 18446744073709551615 4 char 19 23 19 27 18446744073709551615 1 ) 19 27 19 28 18446744073709551615 1 ( 19 28 19 29 18446744073709551615 1 i 19 29 19 30 8 1 - 19 30 19 31 18446744073709551615 6 offset 19 31 19 37 3 1 ) 19 37 19 38 18446744073709551615 1 ) 19 38 19 39 10 1 ; 19 39 19 40 18446744073709551615 1 } 20 3 20 4 18446744073709551615 6 return 21 3 21 9 18446744073709551615 6 output 21 10 21 16 5 1 ; 21 16 21 17 18446744073709551615 1 } 22 1 22 2 18446744073709551615 3 std 24 1 24 4 0 2 :: 24 4 24 6 11 6 string 24 6 24 12 2 4 opg1 24 13 24 17 11 1 ( 24 17 24 18 11 3 std 24 18 24 21 0 2 :: 24 21 24 23 18446744073709551615 6 string 24 23 24 29 2 1 & 24 30 24 31 18446744073709551615 5 input 24 31 24 36 12 1 ) 24 36 24 37 11 1 { 24 38 24 39 18446744073709551615 3 std 25 3 25 6 0 2 :: 25 6 25 8 18446744073709551615 6 string 25 8 25 14 2 6 output 25 15 25 21 13 1 ; 25 21 25 22 18446744073709551615 3 for 26 3 26 6 18446744073709551615 1 ( 26 7 26 8 18446744073709551615 3 int 26 8 26 11 18446744073709551615 1 i 26 12 26 13 14 1 = 26 14 26 15 18446744073709551615 1 0 26 16 26 17 18446744073709551615 1 ; 26 17 26 18 18446744073709551615 1 i 26 19 26 20 14 1 < 26 21 26 22 18446744073709551615 2 42 26 23 26 25 18446744073709551615 1 ; 26 25 26 26 18446744073709551615 1 i 26 27 26 28 14 2 ++ 26 28 26 30 18446744073709551615 1 ) 26 30 26 31 18446744073709551615 1 { 26 32 26 33 18446744073709551615 6 output 27 5 27 11 13 2 += 27 12 27 14 15 14 simple_decrypt 27 15 27 29 1 1 ( 27 29 27 30 1 1 i 27 30 27 31 14 1 , 27 31 27 32 1 5 input 27 33 27 38 12 1 ) 27 38 27 39 1 1 ; 27 39 27 40 18446744073709551615 6 output 28 5 28 11 13 2 += 28 12 28 14 15 11 " Offset: " 28 15 28 26 18446744073709551615 1 ; 28 26 28 27 18446744073709551615 6 output 29 5 29 11 13 2 += 29 12 29 14 15 3 std 29 15 29 18 0 2 :: 29 18 29 20 16 9 to_string 29 20 29 29 16 1 ( 29 29 29 30 16 1 i 29 30 29 31 14 1 ) 29 31 29 32 16 1 ; 29 32 29 33 18446744073709551615 6 output 30 5 30 11 13 2 += 30 12 30 14 15 4 "\n" 30 15 30 19 18446744073709551615 1 ; 30 19 30 20 18446744073709551615 1 } 31 3 31 4 18446744073709551615 6 return 32 3 32 9 18446744073709551615 6 output 32 10 32 16 13 1 ; 32 16 32 17 18446744073709551615 1 } 33 1 33 2 18446744073709551615 3 std 35 1 35 4 0 2 :: 35 4 35 6 17 6 vector 35 6 35 12 18 1 < 35 12 35 13 17 8 unsigned 35 13 35 21 18446744073709551615 3 int 35 22 35 25 18446744073709551615 1 > 35 25 35 26 17 10 HexToBytes 35 27 35 37 17 1 ( 35 37 35 38 17 5 const 35 38 35 43 18446744073709551615 3 std 35 44 35 47 0 2 :: 35 47 35 49 18446744073709551615 6 string 35 49 35 55 2 1 & 35 55 35 56 18446744073709551615 5 input 35 57 35 62 19 1 ) 35 62 35 63 17 1 { 35 63 35 64 18446744073709551615 3 std 36 2 36 5 0 2 :: 36 5 36 7 18446744073709551615 6 vector 36 7 36 13 18 1 < 36 13 36 14 18446744073709551615 8 unsigned 36 14 36 22 18446744073709551615 3 int 36 23 36 26 18446744073709551615 1 > 36 26 36 27 18446744073709551615 5 bytes 36 28 36 33 20 1 ; 36 33 36 34 18446744073709551615 3 std 37 2 37 5 0 2 :: 37 5 37 7 18446744073709551615 12 stringstream 37 7 37 19 21 2 ss 37 20 37 22 22 1 ; 37 22 37 23 18446744073709551615 3 for 39 2 39 5 18446744073709551615 1 ( 39 6 39 7 18446744073709551615 8 unsigned 39 7 39 15 18446744073709551615 3 int 39 16 39 19 18446744073709551615 1 i 39 20 39 21 23 1 = 39 22 39 23 18446744073709551615 1 0 39 24 39 25 18446744073709551615 1 ; 39 25 39 26 18446744073709551615 1 i 39 27 39 28 23 1 < 39 29 39 30 18446744073709551615 5 input 39 31 39 36 19 1 . 39 36 39 37 24 6 length 39 37 39 43 24 1 ( 39 43 39 44 24 1 ) 39 44 39 45 24 1 ; 39 45 39 46 18446744073709551615 1 i 39 47 39 48 23 2 += 39 49 39 51 18446744073709551615 1 2 39 52 39 53 18446744073709551615 1 ) 39 53 39 54 18446744073709551615 1 { 39 54 39 55 18446744073709551615 3 std 40 3 40 6 0 2 :: 40 6 40 8 18446744073709551615 6 string 40 8 40 14 2 10 byteString 40 15 40 25 25 1 = 40 26 40 27 18446744073709551615 5 input 40 28 40 33 19 1 . 40 33 40 34 26 6 substr 40 34 40 40 26 1 ( 40 40 40 41 26 1 i 40 41 40 42 23 1 , 40 42 40 43 26 1 2 40 44 40 45 18446744073709551615 1 ) 40 45 40 46 26 1 ; 40 46 40 47 18446744073709551615 5 bytes 41 3 41 8 20 1 . 41 8 41 9 27 9 push_back 41 9 41 18 27 1 ( 41 18 41 19 27 3 std 41 19 41 22 0 2 :: 41 22 41 24 28 5 stoul 41 24 41 29 28 1 ( 41 29 41 30 28 10 byteString 41 30 41 40 25 1 . 41 40 41 41 29 5 c_str 41 41 41 46 29 1 ( 41 46 41 47 29 1 ) 41 47 41 48 29 1 , 41 48 41 49 28 7 nullptr 41 49 41 56 18446744073709551615 1 , 41 56 41 57 28 2 16 41 57 41 59 18446744073709551615 1 ) 41 59 41 60 28 1 ) 41 60 41 61 27 1 ; 41 61 41 62 18446744073709551615 1 } 42 2 42 3 18446744073709551615 6 return 44 2 44 8 18446744073709551615 5 bytes 44 9 44 14 20 1 ; 44 14 44 15 18446744073709551615 1 } 45 1 45 2 18446744073709551615 3 std 47 1 47 4 0 2 :: 47 4 47 6 30 6 vector 47 6 47 12 18 1 < 47 12 47 13 30 8 unsigned 47 13 47 21 18446744073709551615 4 char 47 22 47 26 18446744073709551615 1 > 47 26 47 27 30 12 generate_key 47 28 47 40 30 1 ( 47 40 47 41 30 5 const 47 41 47 46 18446744073709551615 3 std 47 47 47 50 0 2 :: 47 50 47 52 18446744073709551615 6 string 47 52 47 58 2 1 & 47 59 47 60 18446744073709551615 3 key 47 60 47 63 31 1 ) 47 63 47 64 30 1 { 47 65 47 66 18446744073709551615 58 //Finds the number of characters in the decrypted message. 48 3 48 61 18446744073709551615 6 size_t 49 3 49 9 32 6 length 49 10 49 16 33 1 = 49 17 49 18 18446744073709551615 3 key 49 19 49 22 31 1 . 49 22 49 23 24 6 length 49 23 49 29 24 1 ( 49 29 49 30 24 1 ) 49 30 49 31 24 1 ; 49 31 49 32 18446744073709551615 22 //Create seed from key 51 3 51 25 18446744073709551615 3 std 52 3 52 6 0 2 :: 52 6 52 8 18446744073709551615 8 seed_seq 52 8 52 16 34 4 seed 52 17 52 21 35 1 ( 52 21 52 22 34 3 key 52 22 52 25 31 1 . 52 25 52 26 36 5 begin 52 26 52 31 36 1 ( 52 31 52 32 36 1 ) 52 32 52 33 36 1 , 52 33 52 34 34 3 key 52 35 52 38 31 1 . 52 38 52 39 37 3 end 52 39 52 42 37 1 ( 52 42 52 43 37 1 ) 52 43 52 44 37 1 ) 52 44 52 45 34 1 ; 52 45 52 46 18446744073709551615 62 //Choice of pseudorandom number generator using the given seed 54 3 54 65 18446744073709551615 3 std 55 3 55 6 0 2 :: 55 6 55 8 18446744073709551615 12 minstd_rand0 55 8 55 20 38 9 generator 55 21 55 30 39 1 ( 55 30 55 31 40 4 seed 55 31 55 35 35 1 ) 55 35 55 36 40 1 ; 55 36 55 37 18446744073709551615 43 //Choice of distribution with 1 byte values 57 3 57 46 18446744073709551615 3 std 58 3 58 6 0 2 :: 58 6 58 8 18446744073709551615 24 uniform_int_distribution 58 8 58 32 41 1 < 58 32 58 33 18446744073709551615 4 char 58 33 58 37 18446744073709551615 1 > 58 37 58 38 18446744073709551615 12 distribution 58 39 58 51 42 1 ; 58 51 58 52 18446744073709551615 3 std 60 3 60 6 0 2 :: 60 6 60 8 18446744073709551615 6 vector 60 8 60 14 18 1 < 60 14 60 15 18446744073709551615 8 unsigned 60 15 60 23 18446744073709551615 4 char 60 24 60 28 18446744073709551615 1 > 60 28 60 29 18446744073709551615 6 output 60 30 60 36 43 1 ; 60 36 60 37 18446744073709551615 75 //Retrieve random numbers from the generator using the chosen distribution: 62 3 62 78 18446744073709551615 3 for 63 3 63 6 18446744073709551615 1 ( 63 7 63 8 18446744073709551615 6 size_t 63 8 63 14 32 1 c 63 15 63 16 44 1 = 63 17 63 18 18446744073709551615 1 0 63 19 63 20 18446744073709551615 1 ; 63 20 63 21 18446744073709551615 1 c 63 22 63 23 44 1 < 63 24 63 25 18446744073709551615 6 length 63 26 63 32 33 1 ; 63 32 63 33 18446744073709551615 2 ++ 63 34 63 36 18446744073709551615 1 c 63 36 63 37 44 1 ) 63 37 63 38 18446744073709551615 1 { 63 38 63 39 18446744073709551615 6 output 64 5 64 11 43 1 . 64 11 64 12 27 9 push_back 64 12 64 21 27 1 ( 64 21 64 22 27 1 ( 64 22 64 23 18446744073709551615 3 int 64 23 64 26 18446744073709551615 1 ) 64 26 64 27 18446744073709551615 12 distribution 64 27 64 39 42 1 ( 64 39 64 40 45 9 generator 64 40 64 49 39 1 ) 64 49 64 50 45 1 ) 64 50 64 51 27 1 ; 64 51 64 52 18446744073709551615 1 } 65 3 65 4 18446744073709551615 6 return 66 3 66 9 18446744073709551615 6 output 66 10 66 16 43 1 ; 66 16 66 17 18446744073709551615 1 } 67 1 67 2 18446744073709551615 3 std 69 1 69 4 0 2 :: 69 4 69 6 46 6 vector 69 6 69 12 18 1 < 69 12 69 13 46 8 unsigned 69 13 69 21 18446744073709551615 4 char 69 22 69 26 18446744073709551615 1 > 69 26 69 27 46 4 opg2 69 28 69 32 46 1 ( 69 33 69 34 46 5 const 69 34 69 39 18446744073709551615 3 std 69 40 69 43 0 2 :: 69 43 69 45 18446744073709551615 6 vector 69 45 69 51 18 1 < 69 51 69 52 18446744073709551615 8 unsigned 69 52 69 60 18446744073709551615 3 int 69 61 69 64 18446744073709551615 1 > 69 64 69 65 18446744073709551615 1 & 69 66 69 67 18446744073709551615 6 cipher 69 67 69 73 47 1 , 69 73 69 74 46 5 const 69 75 69 80 18446744073709551615 3 std 69 81 69 84 0 2 :: 69 84 69 86 18446744073709551615 6 vector 69 86 69 92 18 1 < 69 92 69 93 18446744073709551615 8 unsigned 69 93 69 101 18446744073709551615 4 char 69 102 69 106 18446744073709551615 1 > 69 106 69 107 18446744073709551615 1 & 69 108 69 109 18446744073709551615 3 key 69 109 69 112 48 1 ) 69 112 69 113 46 1 { 69 114 69 115 18446744073709551615 8 unsigned 70 3 70 11 18446744073709551615 4 char 70 12 70 16 18446744073709551615 1 c 70 17 70 18 49 1 ; 70 18 70 19 18446744073709551615 3 std 71 3 71 6 0 2 :: 71 6 71 8 18446744073709551615 6 vector 71 8 71 14 18 1 < 71 14 71 15 18446744073709551615 8 unsigned 71 15 71 23 18446744073709551615 4 char 71 24 71 28 18446744073709551615 1 > 71 28 71 29 18446744073709551615 10 de_crypted 71 30 71 40 50 1 ; 71 40 71 41 18446744073709551615 3 for 72 3 72 6 18446744073709551615 1 ( 72 7 72 8 18446744073709551615 6 size_t 72 8 72 14 32 1 i 72 15 72 16 51 1 = 72 16 72 17 18446744073709551615 1 0 72 17 72 18 18446744073709551615 1 ; 72 18 72 19 18446744073709551615 1 i 72 20 72 21 51 1 < 72 21 72 22 18446744073709551615 6 cipher 72 22 72 28 47 1 . 72 28 72 29 52 4 size 72 29 72 33 52 1 ( 72 33 72 34 52 1 ) 72 34 72 35 52 1 ; 72 35 72 36 18446744073709551615 1 i 72 37 72 38 51 2 ++ 72 38 72 40 18446744073709551615 1 ) 72 40 72 41 18446744073709551615 1 { 72 42 72 43 18446744073709551615 1 c 73 5 73 6 49 1 = 73 7 73 8 18446744073709551615 1 ( 73 9 73 10 18446744073709551615 6 cipher 73 10 73 16 47 1 [ 73 16 73 17 53 1 i 73 17 73 18 51 1 ] 73 18 73 19 53 1 ) 73 19 73 20 18446744073709551615 1 ^ 73 20 73 21 18446744073709551615 1 ( 73 21 73 22 18446744073709551615 3 key 73 22 73 25 48 1 [ 73 25 73 26 53 1 i 73 26 73 27 51 1 % 73 27 73 28 18446744073709551615 3 key 73 28 73 31 48 1 . 73 31 73 32 52 4 size 73 32 73 36 52 1 ( 73 36 73 37 52 1 ) 73 37 73 38 52 1 ] 73 38 73 39 53 1 ) 73 39 73 40 18446744073709551615 1 ; 73 40 73 41 18446744073709551615 10 de_crypted 74 5 74 15 50 1 . 74 15 74 16 54 12 emplace_back 74 16 74 28 54 1 ( 74 28 74 29 54 1 c 74 29 74 30 49 1 ) 74 30 74 31 54 1 ; 74 31 74 32 18446744073709551615 1 } 75 3 75 4 18446744073709551615 6 return 76 3 76 9 18446744073709551615 10 de_crypted 76 10 76 20 50 1 ; 76 20 76 21 18446744073709551615 1 } 77 1 77 2 18446744073709551615 0 0 55 0 0 0 22 0 0 1 2 0 3 std 8 1 2 0 14 simple_decrypt 20 1 2 0 18 string:__cxx11:std 10 1 2 0 61 15:32:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 10 1 2 0 61 15:53:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 16:15:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 32 reserve:basic_string:__cxx11:std 21 1 2 0 29 size:basic_string:__cxx11:std 9 1 2 0 61 18:13:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 37 operator*:__normal_iterator:__gnu_cxx 21 1 2 0 34 push_back:basic_string:__cxx11:std 8 1 2 0 4 opg1 10 1 2 0 61 24:31:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 25:15:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 26:12:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 35 operator+=:basic_string:__cxx11:std 8 1 2 0 21 to_string:__cxx11:std 8 1 2 0 10 HexToBytes 31 1 2 0 10 vector:std 10 1 2 0 61 35:57:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 36:28:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 20 1 2 0 16 stringstream:std 9 1 2 0 61 37:20:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 39:20:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 31 length:basic_string:__cxx11:std 9 1 2 0 61 40:15:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 31 substr:basic_string:__cxx11:std 21 1 2 0 20 push_back:vector:std 8 1 2 0 17 stoul:__cxx11:std 21 1 2 0 30 c_str:basic_string:__cxx11:std 8 1 2 0 12 generate_key 10 1 2 0 61 47:60:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 20 1 2 0 6 size_t 9 1 2 0 61 49:10:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 4 1 2 0 12 seed_seq:std 9 1 2 0 61 52:17:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 30 begin:basic_string:__cxx11:std 21 1 2 0 28 end:basic_string:__cxx11:std 20 1 2 0 16 minstd_rand0:std 9 1 2 0 61 55:21:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 24 1 2 0 30 linear_congruential_engine:std 31 1 2 0 28 uniform_int_distribution:std 9 1 2 0 61 58:39:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 60:30:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 63:15:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 37 operator:uniform_int_distribution:std 8 1 2 0 4 opg2 10 1 2 0 61 69:67:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 10 1 2 0 62 69:109:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 70:17:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 71:30:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 9 1 2 0 61 72:15:/home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/opg1.h 21 1 2 0 15 size:vector:std 21 1 2 0 21 operator[]:vector:std 21 1 2 0 23 emplace_back:vector:std 0 0 1 0 0 0 59 /home/joakim/jucipp_projects/Sikkerhet/Ov8/oppg1/crypto.hpp 1538648328